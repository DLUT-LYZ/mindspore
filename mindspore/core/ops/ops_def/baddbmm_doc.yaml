baddbmm:
    description: |
        The result is the sum of the input and a batch matrix-matrix product of matrices in batch1 and batch2.
        The formula is defined as follows:

            .. math::
            \text{out}_{i} = \beta \text{input}_{i} + \alpha (\text{batch1}_{i} \mathbin{@} \text{batch2}_{i})

            Note:
                - One of the two inputs must be a Tensor, when the two inputs have different shapes,
                  they must be able to broadcast to a common shape.
                - The two inputs can not be bool type at the same time,
                  [True, Tensor(True, bool\_), Tensor(np.array([True]), bool\_)] are all considered bool type.
                - The two inputs comply with the implicit type conversion rules to make the data types
                  consistent.

            Args:
                input (Tensor): The input Tensor. When batch1 is a :math:`(C, W, T)` Tensor and batch2 is a
                    :math:`(C, T, H)` Tensor, input must be broadcastable with :math:`(C, W, H)` Tensor.
                batch1 (Tensor): :math:`batch1` in the above formula. Must be 3-D Tensor, dtype is same as input.
                batch2 (Tensor): :math:`batch2` in the above formula. Must be 3-D Tensor, dtype is same as input.
                beta (Union[float, int], optional): multiplier for input. Default: ``1`` .
                alpha (Union[float, int], optional): multiplier for :math:`batch1 @ batch2`. Default: ``1`` .
                    Arguments beta and alpha must be integers when inputs of type not FloatTensor, otherwise they should
                    be a real number.

            Returns:
                Tensor, has the same dtype as input, shape will be :math:`(C, W, H)`.

            Raises:
                    TypeError: The type of `input`, `batch1`, `batch2` is not Tensor.
                    TypeError: The types of `input`, `batch1`, `batch2` are different.
                    TypeError: For inputs of type FloatTensor or DoubleTensor, \
                                arguments beta and alpha not be real numbers, otherwise not be integers.
                    TypeError: For Baddbmm, attributes alpha and beta are not real numbers
                    ValueError: If `batch1` and `batch2` are not 3-D tensors.

            Supported Platforms:
                ``Ascend`` ``GPU`` ``CPU``

            Examples:
                    >>> import numpy as np
                    >>> from mindspore import Tensor, ops
                    >>> input = Tensor(np.ones([1, 3, 3]).astype(np.float32))
                    >>> batch1 = Tensor(np.ones([1, 3, 4]).astype(np.float32))
                    >>> batch2 = Tensor(np.ones([1, 4, 3]).astype(np.float32))
                    >>> output = ops.pyboost_baddbmm(input, batch1, batch2)
                    >>> print(output)
                    [[[5. 5. 5.]
                      [5. 5. 5.]
                      [5. 5. 5.]]]

